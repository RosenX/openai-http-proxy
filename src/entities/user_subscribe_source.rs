//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_subscribe_source")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i32,
    pub subscribe_source_id: i32,
    pub subscribe_source_name: Option<String>,
    pub subscribe_source_icon: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::subscribe_source::Entity",
        from = "Column::SubscribeSourceId",
        to = "super::subscribe_source::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SubscribeSource,
    #[sea_orm(
        belongs_to = "super::user_profile::Entity",
        from = "Column::UserId",
        to = "super::user_profile::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    UserProfile,
}

impl Related<super::subscribe_source::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubscribeSource.def()
    }
}

impl Related<super::user_profile::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserProfile.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
